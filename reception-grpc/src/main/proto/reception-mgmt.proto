syntax = "proto3";
package jp.chang.myclinic.reception.grpc.generated;

message VoidType {
	
}

message BooleanType {
	bool value = 1;
}

message WindowType {
    int32 windowId = 1;
}

message PatientInputs {
    string lastName = 1;
    string firstName = 2;
    string lastNameYomi = 3;
    string firstNameYomi = 4;
    string birthdayGengou = 5;
    string birthdayNen = 6;
    string birthdayMonth = 7;
    string birthdayDay = 8;
    string sex = 9;
    string address = 10;
    string phone = 11;
}

message SetNewPatientWindowInputsRequest {
    WindowType window = 1;
    PatientInputs inputs = 2;
}

message DateInputs {
    string gengou = 1;
    string nen = 2;
    string month = 3;
    string day = 4;
}

message ShahokokuhoInputs {
    string hokenshaBangou = 1;
    string hihokenshaKigou = 2;
    string hihokenshaBangou = 3;
    int32 honnin = 4;
    DateInputs validFromInputs = 5;
    DateInputs validUptoInputs = 6;
    int32 kourei = 7;
}

message SetNewShahokokuhoWindowInputsRequest {
    WindowType window = 1;
    ShahokokuhoInputs inputs = 2;
}

service ReceptionMgmt {
	rpc IsRunning(VoidType) returns (BooleanType) {}
	rpc ClickMainPaneNewPatientButton(VoidType) returns (BooleanType) {}
	rpc FindCreatedNewPatientWindow(VoidType) returns (WindowType) {}
	rpc FindCreatedPatientWithHokenWindow(VoidType) returns (WindowType) {}
	rpc FindCreatedNewShahokokuhoWindow(VoidType) returns (WindowType) {}
	rpc FindCreatedNewKoukikoureiWindow(VoidType) returns (WindowType) {}
	rpc FindCreatedNewKouhiWindow(VoidType) returns (WindowType) {}
	rpc SetNewPatientWindowInputs(SetNewPatientWindowInputsRequest) returns (BooleanType) {}
	rpc SetNewShahokokuhoWindowInputs(SetNewShahokokuhoWindowInputsRequest) returns (BooleanType) {}
	rpc ClickNewPatientWindowEnterButton(WindowType) returns (BooleanType) {}
	rpc ClickEditPatientNewShahokokuhoButton(WindowType) returns (BooleanType) {}
	rpc ClickEditPatientNewKoukikoureiButton(WindowType) returns (BooleanType) {}
	rpc ClickEditPatientNewKouhiButton(WindowType) returns (BooleanType) {}
}